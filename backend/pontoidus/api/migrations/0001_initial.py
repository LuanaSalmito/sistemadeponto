# Generated by Django 5.1.2 on 2024-12-01 15:05

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Jornada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('total_horas', models.DecimalField(decimal_places=2, max_digits=5)),
                ('horas_excedentes', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('horas_faltantes', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='TipoJornada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(choices=[('6h', '6 Horas Contínuas'), ('8h', '8 Horas com Pausa')], max_length=255)),
                ('horas_regime', models.DecimalField(decimal_places=2, max_digits=5)),
                ('pausa_obrigatoria', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RegistroPonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_entrada', models.DateTimeField(blank=True, null=True)),
                ('hora_saida', models.DateTimeField(blank=True, null=True)),
                ('tipo_ponto', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('pausa', 'Pausa')], max_length=20)),
                ('hora_pausa', models.DurationField(blank=True, null=True)),
                ('volta_pausa', models.DateTimeField(blank=True, null=True)),
                ('horas_devidas', models.DurationField(default=datetime.timedelta(0))),
                ('data_registro', models.DateTimeField(auto_now_add=True)),
                ('jornada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_ponto', to='api.jornada')),
            ],
        ),
        migrations.AddField(
            model_name='jornada',
            name='tipo_jornada',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tipojornada'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('admin', 'Administrador'), ('colaborador', 'Colaborador')], default='colaborador', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='jornada',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user'),
        ),
    ]
